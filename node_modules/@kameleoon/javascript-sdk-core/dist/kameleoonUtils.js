"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KameleoonUtils = void 0;
var _tsRes = require("ts-res");
var _constants = require("./constants");
/**
 * @abstract
 * KameleoonUtils - an abstract class for extending kameleoon utils with pre-defined method signatures
 * */
class KameleoonUtils {
  generateRandomString(length) {
    const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';
    let randomString = '';
    if (length < 0) {
      return randomString;
    }
    for (let i = 0; i < length; i++) {
      randomString += characters[Math.floor(Math.random() * characters.length)];
    }
    return randomString;
  }
  getCookieVisitorCode(cookie) {
    const pairs = cookie.split(_constants.Cookie.PairsDelimiter);
    const pair = pairs.find(pair => {
      const [key, _] = pair.split(_constants.Cookie.KeyValueDelimiter);
      return key === _constants.KAMELEOON_COOKIE_KEY;
    });
    if (pair) {
      const [_, value] = pair.split(_constants.Cookie.KeyValueDelimiter);
      return (0, _tsRes.Ok)(value);
    }
    return (0, _tsRes.Err)();
  }
  getResultCookie({
    domain,
    visitorCode
  }) {
    const yearSeconds = 60 * 60 * 24 * 365;
    const cookieArray = [_constants.KAMELEOON_COOKIE_KEY + _constants.Cookie.KeyValueDelimiter + visitorCode, _constants.Cookie.MaxAge + _constants.Cookie.KeyValueDelimiter + yearSeconds, _constants.Cookie.Path + _constants.Cookie.KeyValueDelimiter + '/', _constants.Cookie.Domain + _constants.Cookie.KeyValueDelimiter + domain];
    return cookieArray.join(_constants.Cookie.PairsDelimiter);
  }
}
exports.KameleoonUtils = KameleoonUtils;
//# sourceMappingURL=kameleoonUtils.js.map