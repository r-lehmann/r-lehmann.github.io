{"version":3,"file":"types.js","names":["ExperimentType","exports","RuleType","FeatureFlagSdkLanguageType","FeatureStatus","ExperimentStatus"],"sources":["../../src/campaignConfiguration/types.ts"],"sourcesContent":["import { ClientSettingsType } from '../clientSettings';\nimport { KameleoonDataType } from '../kameleoonData';\nimport { Requester, GetClientConfigurationResultType } from '../requester';\nimport { ClientDataType, IStorage } from '../storage';\nimport { SegmentType, TargetingDataType } from '../targeting';\nimport { VariableType } from '../types';\n\nexport type ScheduleType = {\n  dateStart: string;\n  dateEnd: string;\n};\n\nexport type JSONValue =\n  | string\n  | number\n  | boolean\n  | { [x: string]: JSONValue }\n  | JSONValue[];\n\nexport type JSONType = Record<string | number | symbol, JSONValue> | null;\n\nexport enum ExperimentType {\n  CLASSIC = 'CLASSIC',\n  SERVER_SIDE = 'SERVER_SIDE',\n  DEVELOPER = 'DEVELOPER',\n  MVT = 'MVT',\n  HYBRID = 'HYBRID',\n}\n\nexport enum RuleType {\n  PROGRESSIVE_DELIVERY = 'PROGRESSIVE_DELIVERY',\n  TARGETED_DELIVERY = 'TARGETED_DELIVERY',\n  EXPERIMENTATION = 'EXPERIMENTATION',\n}\n\nexport enum FeatureFlagSdkLanguageType {\n  ANDROID = 'ANDROID',\n  SWIFT = 'SWIFT',\n  JAVA = 'JAVA',\n  CSHARP = 'CSHARP',\n  NODEJS = 'NODEJS',\n  PHP = 'PHP',\n  RUBY = 'RUBY',\n  GO = 'GO',\n  FLUTTER = 'FLUTTER',\n  REACTJS = 'REACTJS',\n}\n\nexport enum FeatureStatus {\n  ACTIVATED = 'ACTIVATED',\n  DEACTIVATED = 'DEACTIVATED',\n  SCHEDULED = 'SCHEDULED',\n}\n\nexport type ExperimentItemType = {\n  id: string;\n  name: string;\n  type: ExperimentType;\n  siteId: string;\n  siteCode: string;\n  status: ExperimentStatus;\n  siteEnabled: boolean;\n  variations: ExperimentVariationType[];\n  deviations: DeviationType[];\n  respoolTime: RespoolTimeType[];\n  segment: SegmentType | null;\n};\n\nexport type ExperimentVariationType = {\n  id: string;\n  customJson: string;\n};\n\nexport type DeviationType = {\n  variationId: string;\n  value: number;\n};\n\nexport type RespoolTimeType = {\n  variationId: string;\n  value: number;\n};\n\nexport enum ExperimentStatus {\n  DRAFT = 'DRAFT',\n  ACTIVE = 'ACTIVE',\n  PAUSED = 'PAUSED',\n  SCHEDULED = 'SCHEDULED',\n  STOPPED = 'STOPPED',\n  USED_AS_PERSONALIZATION = 'USED_AS_PERSONALIZATION',\n  DEVIATED = 'DEVIATED',\n}\n\nexport type FeatureFlagType = {\n  id: number;\n  featureKey: string;\n  variations: FeatureVariationType[];\n  defaultVariationKey: string;\n  rules: RuleItemType[];\n};\n\nexport type FeatureVariationType = {\n  key: string;\n  variables: FeatureVariableType[];\n};\n\nexport type FeatureVariableType = {\n  key: string;\n  type: VariableType;\n  value: string | number | boolean;\n};\n\nexport type RuleItemType = {\n  type: RuleType;\n  id: number;\n  respoolTime: number | null;\n  order: number;\n  exposition: number;\n  experimentId: number;\n  variationByExposition: VariationByExpositionType[];\n  segment: SegmentType | null;\n};\n\nexport type VariationByExpositionType = {\n  variationKey: string;\n  variationId: number | null;\n  exposition: number;\n};\n\nexport type ConfigurationDataType = {\n  experiments: ExperimentItemType[];\n  featureFlags: FeatureFlagType[];\n  configuration: ConfigurationType;\n};\n\nexport type ConfigurationType = {\n  realTimeUpdate: boolean;\n};\n\nexport type CampaignConfigurationType = {\n  targetingData: TargetingDataType;\n  configurationData: ConfigurationDataType;\n};\n\nexport type UnsentTargetingDataType = {\n  [visitorCode: string]: KameleoonDataType[];\n};\n\nexport type CampaignConfigurationParametersType = {\n  settings: ClientSettingsType;\n  storage: IStorage<ClientDataType>;\n  requester: Requester;\n  externalClientConfiguration?: GetClientConfigurationResultType;\n  targetingCleanupInterval?: number;\n};\n"],"mappings":";;;;;;IAqBYA,cAAc,0BAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AAAAC,OAAA,CAAAD,cAAA,GAAAA,cAAA;AAAA,IAQdE,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAAAD,OAAA,CAAAC,QAAA,GAAAA,QAAA;AAAA,IAMRC,0BAA0B,0BAA1BA,0BAA0B;EAA1BA,0BAA0B;EAA1BA,0BAA0B;EAA1BA,0BAA0B;EAA1BA,0BAA0B;EAA1BA,0BAA0B;EAA1BA,0BAA0B;EAA1BA,0BAA0B;EAA1BA,0BAA0B;EAA1BA,0BAA0B;EAA1BA,0BAA0B;EAAA,OAA1BA,0BAA0B;AAAA;AAAAF,OAAA,CAAAE,0BAAA,GAAAA,0BAAA;AAAA,IAa1BC,aAAa,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAAAH,OAAA,CAAAG,aAAA,GAAAA,aAAA;AAAA,IAmCbC,gBAAgB,0BAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA;AAAAJ,OAAA,CAAAI,gBAAA,GAAAA,gBAAA"}