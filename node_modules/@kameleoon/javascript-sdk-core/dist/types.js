"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VariableType = exports.Milliseconds = exports.Environment = void 0;
/**
 * @param {number} updateInterval - update interval in _minutes_ for sdk configuration, minimum value is 1 minute
 * @defaultvalue 60
 *
 * @param {Environment} environment - feature flag environment
 * @defaultvalue Environment.Production
 *
 * @param {number | undefined} targetingDataCleanupInterval - interval in _minutes_ for cleaning up targeting data, minimum value is 1 minute
 * Note: if not specified, default value will be used
 * @defaultvalue
 * - JavaScript SDK: `undefined` (no cleanup)
 * - React/React Native SDK: `undefined` (no cleanup)
 * - NodeJS SDK: `30`
 * */
/**
 * @param {string} siteCode - client's siteCode defined on Kameleoon platform
 * @param {Partial<SDKConfigurationType>} configuration - client's configuration
 * @param {InternalSDKConfigurationType} internalConfiguration - internal configuration for sdk core to be initialized with certain parameters to certain type of JavaScript SDK
 * */
/**
 * @param {SDKType} type - type of the SDK
 * @param {string} version - version of the package
 * */
/**
 * @param {IExternalStorage | undefined} externalStorage - external file system storage implemented outside client initialization
 * @param {IExternalEventSourceConstructor | undefined} externalEventSource - constructor for building external event source implementation
 * @param {ExternalPackageInfoType} externalPackageInfo - external package info, used to get package version and name
 * @param {GetClientConfigurationResultType} externalClientConfiguration - external fetched client configuration
 * @param {IExternalRequestDispatcher} externalRequestDispatcher - external request dispatcher, used to track data or get data
 * @param {number} targetingDataCleanupInterval - interval in *minutes* for cleaning up targeting data, minimum value is 1 minute
 * */
/**
 * @readonly
 * @enum {string} an Enum containing all possible variants of environment, passed as an argument to KameleoonClient `configuration`s `environment` field
 * */
let Environment = /*#__PURE__*/function (Environment) {
  Environment["Production"] = "production";
  Environment["Staging"] = "staging";
  Environment["Development"] = "development";
  return Environment;
}({});
/**
 * @readonly
 * @enum {string} an Enum containing all possible variants of feature variable types
 * */
exports.Environment = Environment;
let VariableType = /*#__PURE__*/function (VariableType) {
  VariableType["BOOLEAN"] = "BOOLEAN";
  VariableType["NUMBER"] = "NUMBER";
  VariableType["STRING"] = "STRING";
  VariableType["JSON"] = "JSON";
  return VariableType;
}({});
exports.VariableType = VariableType;
let Milliseconds = function (Milliseconds) {
  Milliseconds[Milliseconds["Second"] = 1000] = "Second";
  Milliseconds[Milliseconds["Minute"] = 60 * Milliseconds.Second] = "Minute";
  Milliseconds[Milliseconds["Hour"] = 60 * Milliseconds.Minute] = "Hour";
  return Milliseconds;
}({});
exports.Milliseconds = Milliseconds;
//# sourceMappingURL=types.js.map