{"version":3,"file":"pageView.js","names":["_requester","require","_nonce","_types","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","PageView","Nonce","constructor","urlAddress","title","referrers","url","UrlEventType","Page","UrlParameter","Href","encodeURIComponent","Title","getReferresParameter","nonce","data","type","KameleoonData","ReferrersIndices","JSON","stringify","exports"],"sources":["../../src/kameleoonData/pageView.ts"],"sourcesContent":["import { UrlEventType, UrlParameter } from '../requester';\nimport { Nonce } from './nonce';\nimport {\n  IKameleoonData,\n  KameleoonData,\n  PageViewDataType,\n  PageViewParametersType,\n} from './types';\n\n/**\n * @class\n * PageView - a class for creating an instance of a page view data\n * */\nexport class PageView extends Nonce implements IKameleoonData {\n  private urlAddress: string;\n  private title: string;\n  private referrers?: number[];\n\n  /**\n   * @param {PageViewParametersType} pageViewParameters - an object with page view parameters\n   * */\n  constructor({ urlAddress, title, referrers }: PageViewParametersType) {\n    super();\n\n    this.urlAddress = urlAddress;\n    this.title = title;\n    this.referrers = referrers;\n  }\n\n  /**\n   * @property url - url for the current data type used for events tracking\n   * */\n  get url(): string {\n    return (\n      UrlEventType.Page +\n      UrlParameter.Href +\n      encodeURIComponent(this.urlAddress) +\n      UrlParameter.Title +\n      encodeURIComponent(this.title) +\n      this.getReferresParameter(this.referrers) +\n      UrlParameter.Nonce +\n      this.nonce\n    );\n  }\n\n  /**\n   * @property data - data of the current class instance\n   * */\n  get data(): PageViewDataType {\n    return {\n      urlAddress: this.urlAddress,\n      title: this.title,\n      referrers: this.referrers,\n      type: KameleoonData.PageView,\n      nonce: this.nonce,\n    };\n  }\n\n  private getReferresParameter(\n    referrers: PageViewParametersType['referrers'],\n  ): string {\n    if (referrers) {\n      return UrlParameter.ReferrersIndices + JSON.stringify(referrers);\n    }\n\n    return '';\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAKiB,SAAAG,gBAAAC,GAAA,EAAAC,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAD,GAAA,IAAAI,MAAA,CAAAC,cAAA,CAAAL,GAAA,EAAAC,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAR,GAAA,CAAAC,GAAA,IAAAC,KAAA,WAAAF,GAAA;AAAA,SAAAG,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAEjB;AACA;AACA;AACA;AACO,MAAMU,QAAQ,SAASC,YAAK,CAA2B;EAK5D;AACF;AACA;EACEC,WAAWA,CAAC;IAAEC,UAAU;IAAEC,KAAK;IAAEC;EAAkC,CAAC,EAAE;IACpE,KAAK,EAAE;IAAC5B,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAER,IAAI,CAAC0B,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC5B;;EAEA;AACF;AACA;EACE,IAAIC,GAAGA,CAAA,EAAW;IAChB,OACEC,uBAAY,CAACC,IAAI,GACjBC,uBAAY,CAACC,IAAI,GACjBC,kBAAkB,CAAC,IAAI,CAACR,UAAU,CAAC,GACnCM,uBAAY,CAACG,KAAK,GAClBD,kBAAkB,CAAC,IAAI,CAACP,KAAK,CAAC,GAC9B,IAAI,CAACS,oBAAoB,CAAC,IAAI,CAACR,SAAS,CAAC,GACzCI,uBAAY,CAACR,KAAK,GAClB,IAAI,CAACa,KAAK;EAEd;;EAEA;AACF;AACA;EACE,IAAIC,IAAIA,CAAA,EAAqB;IAC3B,OAAO;MACLZ,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBW,IAAI,EAAEC,oBAAa,CAACjB,QAAQ;MAC5Bc,KAAK,EAAE,IAAI,CAACA;IACd,CAAC;EACH;EAEQD,oBAAoBA,CAC1BR,SAA8C,EACtC;IACR,IAAIA,SAAS,EAAE;MACb,OAAOI,uBAAY,CAACS,gBAAgB,GAAGC,IAAI,CAACC,SAAS,CAACf,SAAS,CAAC;IAClE;IAEA,OAAO,EAAE;EACX;AACF;AAACgB,OAAA,CAAArB,QAAA,GAAAA,QAAA"}