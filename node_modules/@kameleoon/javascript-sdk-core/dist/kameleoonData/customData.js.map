{"version":3,"file":"customData.js","names":["_requester","require","_nonce","_types","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","CustomData","Nonce","constructor","index","url","uniqueValues","Set","resultValue","forEach","keys","length","UrlEventType","UrlParameter","Index","ValuesCountMap","encodeURIComponent","JSON","stringify","Overwrite","nonce","data","type","KameleoonData","exports"],"sources":["../../src/kameleoonData/customData.ts"],"sourcesContent":["import { UrlEventType, UrlParameter } from '../requester';\nimport { Nonce } from './nonce';\nimport { CustomDataType, IKameleoonData, KameleoonData } from './types';\n\n/**\n * @class\n * CustomData - a class for creating an instance for user's custom data\n * */\nexport class CustomData extends Nonce implements IKameleoonData {\n  private index: number;\n  private value: string[];\n\n  /**\n   * @param {number} index - an index of custom data to be stored under in a state, an index of custom data can be specified in `Advanced Tools` section of Kameleoon Application\n   * @param {string[]} value - custom value to store under the specified id, value can be anything but has to be stringified to match the `string` type. *Note* value is variadic parameter and can be used as follows\n   * @example\n   * ```ts\n   * // - Single value\n   * const customData = new CustomData(0, 'value_1');\n   * // - Variadic number of values\n   * const customData = new CustomData(0, 'value_1', 'value_2', 'value_3');\n   * // - Array of values\n   * const values = ['value_1', 'value_2', 'value_3'];\n   * const customData = new CustomData(0, ...values);\n   * ```\n   * */\n  constructor(index: number, ...value: string[]) {\n    super();\n\n    this.index = index;\n    this.value = value;\n  }\n\n  /**\n   * @property url - url for the current data type used for events tracking\n   * */\n  get url(): string {\n    const uniqueValues = [...new Set(this.value)];\n    let resultValue: Record<string, 1> = {};\n\n    // --- Note ---\n    // Final value should look like this `{ value_1: 1, value_2: 1, value_3: 1}`\n    // With no duplicates\n    uniqueValues.forEach((value) => {\n      resultValue[value] = 1;\n    });\n\n    if (!Object.keys(resultValue).length) {\n      return '';\n    }\n\n    return (\n      UrlEventType.CustomData +\n      UrlParameter.Index +\n      this.index +\n      UrlParameter.ValuesCountMap +\n      encodeURIComponent(JSON.stringify(resultValue)) +\n      UrlParameter.Overwrite +\n      String(true) +\n      UrlParameter.Nonce +\n      this.nonce\n    );\n  }\n\n  /**\n   * @property data - data of the current class instance\n   * */\n  get data(): CustomDataType {\n    return {\n      index: this.index,\n      value: this.value,\n      type: KameleoonData.CustomData,\n      nonce: this.nonce,\n    };\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAAwE,SAAAG,gBAAAC,GAAA,EAAAC,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAD,GAAA,IAAAI,MAAA,CAAAC,cAAA,CAAAL,GAAA,EAAAC,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAR,GAAA,CAAAC,GAAA,IAAAC,KAAA,WAAAF,GAAA;AAAA,SAAAG,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAExE;AACA;AACA;AACA;AACO,MAAMU,UAAU,SAASC,YAAK,CAA2B;EAI9D;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAACC,KAAa,EAAE,GAAGvB,KAAe,EAAE;IAC7C,KAAK,EAAE;IAACH,eAAA;IAAAA,eAAA;IAER,IAAI,CAAC0B,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACvB,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;EACE,IAAIwB,GAAGA,CAAA,EAAW;IAChB,MAAMC,YAAY,GAAG,CAAC,GAAG,IAAIC,GAAG,CAAC,IAAI,CAAC1B,KAAK,CAAC,CAAC;IAC7C,IAAI2B,WAA8B,GAAG,CAAC,CAAC;;IAEvC;IACA;IACA;IACAF,YAAY,CAACG,OAAO,CAAE5B,KAAK,IAAK;MAC9B2B,WAAW,CAAC3B,KAAK,CAAC,GAAG,CAAC;IACxB,CAAC,CAAC;IAEF,IAAI,CAACE,MAAM,CAAC2B,IAAI,CAACF,WAAW,CAAC,CAACG,MAAM,EAAE;MACpC,OAAO,EAAE;IACX;IAEA,OACEC,uBAAY,CAACX,UAAU,GACvBY,uBAAY,CAACC,KAAK,GAClB,IAAI,CAACV,KAAK,GACVS,uBAAY,CAACE,cAAc,GAC3BC,kBAAkB,CAACC,IAAI,CAACC,SAAS,CAACV,WAAW,CAAC,CAAC,GAC/CK,uBAAY,CAACM,SAAS,GACtB7B,MAAM,CAAC,IAAI,CAAC,GACZuB,uBAAY,CAACX,KAAK,GAClB,IAAI,CAACkB,KAAK;EAEd;;EAEA;AACF;AACA;EACE,IAAIC,IAAIA,CAAA,EAAmB;IACzB,OAAO;MACLjB,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBvB,KAAK,EAAE,IAAI,CAACA,KAAK;MACjByC,IAAI,EAAEC,oBAAa,CAACtB,UAAU;MAC9BmB,KAAK,EAAE,IAAI,CAACA;IACd,CAAC;EACH;AACF;AAACI,OAAA,CAAAvB,UAAA,GAAAA,UAAA"}