{"version":3,"file":"conversion.js","names":["_requester","require","_nonce","_types","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","Conversion","Nonce","constructor","goalId","revenue","negative","url","UrlEventType","UrlParameter","GoalId","Revenue","Negative","nonce","data","type","KameleoonData","exports"],"sources":["../../src/kameleoonData/conversion.ts"],"sourcesContent":["import { UrlEventType, UrlParameter } from '../requester';\nimport { Nonce } from './nonce';\nimport {\n  ConversionDataType,\n  ConversionParametersType,\n  IKameleoonData,\n  KameleoonData,\n} from './types';\n\n/**\n * @class\n * Conversion - a class for creating an instance for conversion tracking\n * */\nexport class Conversion extends Nonce implements IKameleoonData {\n  private goalId: number;\n  private revenue: number;\n  private negative: boolean;\n\n  /**\n   * @param {ConversionParametersType} converstionParameters - an object with conversion parameters\n   * */\n  constructor({\n    goalId,\n    revenue = 0,\n    negative = false,\n  }: ConversionParametersType) {\n    super();\n\n    this.goalId = goalId;\n    this.revenue = revenue;\n    this.negative = negative;\n  }\n\n  /**\n   * @property url - url for the current data type used for events tracking\n   * */\n  get url(): string {\n    return (\n      UrlEventType.Conversion +\n      UrlParameter.GoalId +\n      String(this.goalId) +\n      UrlParameter.Revenue +\n      String(this.revenue) +\n      UrlParameter.Negative +\n      String(this.negative) +\n      UrlParameter.Nonce +\n      this.nonce\n    );\n  }\n\n  /**\n   * @property data - data of the current class instance\n   * */\n  get data(): ConversionDataType {\n    return {\n      goalId: this.goalId,\n      revenue: this.revenue,\n      negative: this.negative,\n      type: KameleoonData.Conversion,\n      nonce: this.nonce,\n    };\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAKiB,SAAAG,gBAAAC,GAAA,EAAAC,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAD,GAAA,IAAAI,MAAA,CAAAC,cAAA,CAAAL,GAAA,EAAAC,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAR,GAAA,CAAAC,GAAA,IAAAC,KAAA,WAAAF,GAAA;AAAA,SAAAG,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAEjB;AACA;AACA;AACA;AACO,MAAMU,UAAU,SAASC,YAAK,CAA2B;EAK9D;AACF;AACA;EACEC,WAAWA,CAAC;IACVC,MAAM;IACNC,OAAO,GAAG,CAAC;IACXC,QAAQ,GAAG;EACa,CAAC,EAAE;IAC3B,KAAK,EAAE;IAAC5B,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAER,IAAI,CAAC0B,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC1B;;EAEA;AACF;AACA;EACE,IAAIC,GAAGA,CAAA,EAAW;IAChB,OACEC,uBAAY,CAACP,UAAU,GACvBQ,uBAAY,CAACC,MAAM,GACnBpB,MAAM,CAAC,IAAI,CAACc,MAAM,CAAC,GACnBK,uBAAY,CAACE,OAAO,GACpBrB,MAAM,CAAC,IAAI,CAACe,OAAO,CAAC,GACpBI,uBAAY,CAACG,QAAQ,GACrBtB,MAAM,CAAC,IAAI,CAACgB,QAAQ,CAAC,GACrBG,uBAAY,CAACP,KAAK,GAClB,IAAI,CAACW,KAAK;EAEd;;EAEA;AACF;AACA;EACE,IAAIC,IAAIA,CAAA,EAAuB;IAC7B,OAAO;MACLV,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBS,IAAI,EAAEC,oBAAa,CAACf,UAAU;MAC9BY,KAAK,EAAE,IAAI,CAACA;IACd,CAAC;EACH;AACF;AAACI,OAAA,CAAAhB,UAAA,GAAAA,UAAA"}