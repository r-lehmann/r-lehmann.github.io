{"version":3,"file":"targetingNode.js","names":["_conditions","require","_types","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","TargetingNode","constructor","left","right","isOperator","nodeValue","result","ConditionFactory","createCondition","ok","data","nodeError","error","leftChild","rightChild","Operator","And","Or","exports"],"sources":["../../src/targeting/targetingNode.ts"],"sourcesContent":["import { KameleoonError } from '../kameleoonError';\nimport { ConditionFactory, ConditionDataType } from './conditions';\nimport { NodeValueType, Operator } from './types';\n\nexport interface ITargetingNode {\n  readonly value?: NodeValueType;\n  readonly left?: ITargetingNode;\n  readonly right?: ITargetingNode;\n  readonly error?: KameleoonError;\n}\n\nexport class TargetingNode implements ITargetingNode {\n  private nodeValue?: NodeValueType;\n  private nodeError?: KameleoonError;\n  private leftChild?: ITargetingNode;\n  private rightChild?: ITargetingNode;\n\n  constructor(\n    value: ConditionDataType | Operator,\n    left?: ITargetingNode,\n    right?: ITargetingNode,\n  ) {\n    if (this.isOperator(value)) {\n      this.nodeValue = value;\n    } else {\n      const result = ConditionFactory.createCondition(value);\n\n      if (result.ok) {\n        this.nodeValue = result.data;\n      } else {\n        this.nodeError = result.error;\n      }\n    }\n\n    this.leftChild = left;\n    this.rightChild = right;\n  }\n\n  get value(): NodeValueType | undefined {\n    return this.nodeValue;\n  }\n\n  get error(): KameleoonError | undefined {\n    return this.nodeError;\n  }\n\n  get left(): ITargetingNode | undefined {\n    return this.leftChild;\n  }\n\n  get right(): ITargetingNode | undefined {\n    return this.rightChild;\n  }\n\n  private isOperator(value: ConditionDataType | Operator): value is Operator {\n    return value === Operator.And || value === Operator.Or;\n  }\n}\n"],"mappings":";;;;;;AACA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAAkD,SAAAE,gBAAAC,GAAA,EAAAC,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAD,GAAA,IAAAI,MAAA,CAAAC,cAAA,CAAAL,GAAA,EAAAC,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAR,GAAA,CAAAC,GAAA,IAAAC,KAAA,WAAAF,GAAA;AAAA,SAAAG,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAS3C,MAAMU,aAAa,CAA2B;EAMnDC,WAAWA,CACTrB,KAAmC,EACnCsB,IAAqB,EACrBC,KAAsB,EACtB;IAAA1B,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IACA,IAAI,IAAI,CAAC2B,UAAU,CAACxB,KAAK,CAAC,EAAE;MAC1B,IAAI,CAACyB,SAAS,GAAGzB,KAAK;IACxB,CAAC,MAAM;MACL,MAAM0B,MAAM,GAAGC,4BAAgB,CAACC,eAAe,CAAC5B,KAAK,CAAC;MAEtD,IAAI0B,MAAM,CAACG,EAAE,EAAE;QACb,IAAI,CAACJ,SAAS,GAAGC,MAAM,CAACI,IAAI;MAC9B,CAAC,MAAM;QACL,IAAI,CAACC,SAAS,GAAGL,MAAM,CAACM,KAAK;MAC/B;IACF;IAEA,IAAI,CAACC,SAAS,GAAGX,IAAI;IACrB,IAAI,CAACY,UAAU,GAAGX,KAAK;EACzB;EAEA,IAAIvB,KAAKA,CAAA,EAA8B;IACrC,OAAO,IAAI,CAACyB,SAAS;EACvB;EAEA,IAAIO,KAAKA,CAAA,EAA+B;IACtC,OAAO,IAAI,CAACD,SAAS;EACvB;EAEA,IAAIT,IAAIA,CAAA,EAA+B;IACrC,OAAO,IAAI,CAACW,SAAS;EACvB;EAEA,IAAIV,KAAKA,CAAA,EAA+B;IACtC,OAAO,IAAI,CAACW,UAAU;EACxB;EAEQV,UAAUA,CAACxB,KAAmC,EAAqB;IACzE,OAAOA,KAAK,KAAKmC,eAAQ,CAACC,GAAG,IAAIpC,KAAK,KAAKmC,eAAQ,CAACE,EAAE;EACxD;AACF;AAACC,OAAA,CAAAlB,aAAA,GAAAA,aAAA"}