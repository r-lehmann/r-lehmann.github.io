"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StorageConstructor = void 0;
var _javascriptSdkCore = require("@kameleoon/javascript-sdk-core");
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
class StorageConstructor {
  initialize(key) {
    const storage = new Storage(key);
    return storage;
  }
}
exports.StorageConstructor = StorageConstructor;
class Storage {
  constructor(key) {
    _defineProperty(this, "storageKey", void 0);
    this.storageKey = key;
  }
  get key() {
    return this.storageKey;
  }
  read() {
    const data = localStorage.getItem(this.storageKey);
    if (!data) {
      return (0, _javascriptSdkCore.Err)(new _javascriptSdkCore.KameleoonError(_javascriptSdkCore.KameleoonException.StorageRead, this.storageKey));
    }
    return (0, _javascriptSdkCore.Ok)(data);
  }
  write(data) {
    try {
      localStorage.setItem(this.storageKey, data);
      return (0, _javascriptSdkCore.Ok)();
    } catch (err) {
      return (0, _javascriptSdkCore.Err)(new _javascriptSdkCore.KameleoonError(_javascriptSdkCore.KameleoonException.StorageWrite, err));
    }
  }
}
//# sourceMappingURL=storage.js.map