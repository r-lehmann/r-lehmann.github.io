{"version":3,"file":"kameleoonError.js","names":["_constants","require","_helpers","_types","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","KameleoonError","Error","constructor","type","secondParam","thirdParam","name","errorType","KameleoonException","Initialization","ClientConfiguration","VisitorCodeMaxLength","StorageInitialization","VariationNotFound","EventSourceInitialization","RemoteData","message","ERROR_MESSAGES","NotAllocated","NotTargeted","ExperimentConfigurationNotFound","FeatureFlagConfigurationNotFound","StorageWrite","JSONParse","StorageRead","StorageParse","TargetingCondition","NumberParse","AmongValuesCheck","exhaustCheck","exports"],"sources":["../../src/kameleoonError/kameleoonError.ts"],"sourcesContent":["import { KameleoonStorageKey } from '../storage';\nimport { TargetingType } from '../targeting';\nimport { ERROR_MESSAGES } from './constants';\nimport { exhaustCheck } from './helpers';\nimport { KameleoonException } from './types';\n\n/**\n * @class\n * KameleoonError - extends standard `Error` by adding custom `type` property with the type of `KameleoonException`\n * */\nexport class KameleoonError extends Error {\n  private errorType: KameleoonException;\n\n  /**\n   * @param {KameleoonException} type - type of KameleoonError represented by `KameleoonException` enum\n   * */\n  constructor(\n    type:\n      | KameleoonException.Initialization\n      | KameleoonException.ClientConfiguration\n      | KameleoonException.VisitorCodeMaxLength\n      | KameleoonException.StorageInitialization\n      | KameleoonException.EventSourceInitialization\n      | KameleoonException.VariationNotFound\n      | KameleoonException.RemoteData,\n  );\n  constructor(\n    type: KameleoonException.FeatureFlagConfigurationNotFound,\n    featureKey: string,\n    visitorCode: string,\n  );\n  constructor(\n    type: KameleoonException.NotTargeted | KameleoonException.NotAllocated,\n    visitorCode: string,\n  );\n  constructor(\n    type: KameleoonException.ExperimentConfigurationNotFound,\n    experimentId: number,\n    visitorCode: string,\n  );\n  constructor(\n    type: KameleoonException.StorageWrite | KameleoonException.JSONParse,\n    err: unknown,\n  );\n  constructor(type: KameleoonException.StorageRead, storageKey: string);\n  constructor(\n    type: KameleoonException.StorageParse,\n    err: unknown,\n    key: KameleoonStorageKey,\n  );\n  constructor(\n    type: KameleoonException.TargetingCondition,\n    targetingType: TargetingType,\n  );\n  constructor(\n    type: KameleoonException.AmongValuesCheck,\n    err: unknown,\n    value: string,\n  );\n  constructor(type: KameleoonException.NumberParse, value: string);\n  constructor(\n    type: KameleoonException,\n    secondParam?:\n      | number\n      | string\n      | unknown\n      | KameleoonStorageKey\n      | TargetingType,\n    thirdParam?: string | KameleoonStorageKey,\n  ) {\n    super(`Error: ${type}`);\n\n    this.name = 'KameleoonError';\n    this.errorType = type;\n\n    switch (type) {\n      case KameleoonException.Initialization:\n      case KameleoonException.ClientConfiguration:\n      case KameleoonException.VisitorCodeMaxLength:\n      case KameleoonException.StorageInitialization:\n      case KameleoonException.VariationNotFound:\n      case KameleoonException.EventSourceInitialization:\n      case KameleoonException.RemoteData:\n        this.message = ERROR_MESSAGES[type]();\n        break;\n      case KameleoonException.NotAllocated:\n      case KameleoonException.NotTargeted:\n        this.message = ERROR_MESSAGES[type](secondParam as string);\n        break;\n      case KameleoonException.ExperimentConfigurationNotFound:\n        this.message = ERROR_MESSAGES[type](\n          secondParam as number,\n          thirdParam as string,\n        );\n        break;\n      case KameleoonException.FeatureFlagConfigurationNotFound:\n        this.message = ERROR_MESSAGES[type](\n          secondParam as string,\n          thirdParam as string,\n        );\n        break;\n      case KameleoonException.StorageWrite:\n      case KameleoonException.JSONParse:\n        this.message = ERROR_MESSAGES[type](secondParam);\n        break;\n      case KameleoonException.StorageRead:\n        this.message = ERROR_MESSAGES[type](secondParam as KameleoonStorageKey);\n        break;\n      case KameleoonException.StorageParse:\n        this.message = ERROR_MESSAGES[type](\n          secondParam,\n          thirdParam as KameleoonStorageKey,\n        );\n        break;\n      case KameleoonException.TargetingCondition:\n        this.message = ERROR_MESSAGES[type](secondParam as TargetingType);\n        break;\n      case KameleoonException.NumberParse:\n        this.message = ERROR_MESSAGES[type](secondParam as string);\n        break;\n      case KameleoonException.AmongValuesCheck:\n        this.message = ERROR_MESSAGES[type](secondParam, thirdParam as string);\n        break;\n      default:\n        exhaustCheck(type);\n    }\n  }\n\n  get type(): KameleoonException {\n    return this.errorType;\n  }\n}\n"],"mappings":"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"}