{"version":3,"file":"types.js","names":[],"sources":["../../../src/targeting/conditions/types.ts"],"sourcesContent":["import { Result } from 'ts-res';\nimport { KameleoonError } from '../../kameleoonError';\nimport {\n  EvaluationDataType,\n  MatchTypeCustomData,\n  MatchTypeTest,\n  MatchTypeVariation,\n  TargetingType,\n} from '../types';\nimport { CustomDataCondition } from './customDataCondition';\nimport { ExclusiveExperimentCondition } from './exclusiveExperimentCondition';\nimport { TargetExperimentCondition } from './targetExperimentCondition';\n\nexport interface ICondition {\n  evaluate: (data: EvaluationDataType) => Result<boolean, KameleoonError>;\n}\n\nexport type ConditionType =\n  | CustomDataCondition\n  | ExclusiveExperimentCondition\n  | TargetExperimentCondition;\n\nexport type ConditionDataType = {\n  id: number;\n  targetingType: TargetingType;\n  isInclude: boolean | null;\n  weight: number;\n  customDataIndex: string | null;\n  value: string | null;\n  valueMatchType: MatchTypeCustomData | null;\n  experiment?: number | null;\n  variation?: number | null;\n  variationMatchType?: MatchTypeVariation | null;\n  testMatchType?: MatchTypeTest | null;\n};\n"],"mappings":""}