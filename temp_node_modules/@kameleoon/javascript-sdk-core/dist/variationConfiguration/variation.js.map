{"version":3,"file":"variation.js","names":["_types","require","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","Variation","constructor","variationData","id","Error","variationId","isValid","respoolTime","variation","length","assignmentTime","Date","parse","assignmentDate","getTime","Milliseconds","Second","variationRespoolTime","find","respool","exports"],"sources":["../../src/variationConfiguration/variation.ts"],"sourcesContent":["import { RespoolTimeType } from '../campaignConfiguration/types';\nimport { Milliseconds } from '../types';\nimport { VariationType } from './types';\n\ninterface IVariation {\n  readonly id: number;\n  isValid: (respoolTime?: RespoolTimeType[]) => boolean;\n}\n\nexport class Variation implements IVariation {\n  variationData?: VariationType;\n\n  constructor(variationData?: VariationType) {\n    this.variationData = variationData;\n  }\n\n  get id(): number {\n    if (!this.variationData) {\n      throw new Error(\n        \"Internal usage error: Check if the variation `isValid`, before getting it's `id`\",\n      );\n    }\n\n    return this.variationData.variationId;\n  }\n\n  public isValid(respoolTime?: RespoolTimeType[]): boolean {\n    const variation = this.variationData;\n\n    if (!variation) {\n      return false;\n    }\n\n    // --- Note ---\n    // - Respool is a kind of shuffle parameter\n    // it's presence indicates that variations assigned to\n    // user has changed at certain time (time is the value of `respoolTime` in seconds)\n    // - So the variation is valid unless it has been shuffled after it's assignment\n    if (respoolTime?.length) {\n      const assignmentTime =\n        new Date(Date.parse(variation.assignmentDate)).getTime() /\n        Milliseconds.Second;\n      const variationRespoolTime = respoolTime.find(\n        (respool) => respool.variationId === String(variation.variationId),\n      );\n\n      if (!variationRespoolTime) {\n        return true;\n      }\n\n      return assignmentTime > variationRespoolTime.value;\n    }\n\n    return true;\n  }\n}\n"],"mappings":";;;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AAAwC,SAAAC,gBAAAC,GAAA,EAAAC,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAD,GAAA,IAAAI,MAAA,CAAAC,cAAA,CAAAL,GAAA,EAAAC,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAR,GAAA,CAAAC,GAAA,IAAAC,KAAA,WAAAF,GAAA;AAAA,SAAAG,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAQjC,MAAMU,SAAS,CAAuB;EAG3CC,WAAWA,CAACC,aAA6B,EAAE;IAAAzB,eAAA;IACzC,IAAI,CAACyB,aAAa,GAAGA,aAAa;EACpC;EAEA,IAAIC,EAAEA,CAAA,EAAW;IACf,IAAI,CAAC,IAAI,CAACD,aAAa,EAAE;MACvB,MAAM,IAAIE,KAAK,CACb,kFAAkF,CACnF;IACH;IAEA,OAAO,IAAI,CAACF,aAAa,CAACG,WAAW;EACvC;EAEOC,OAAOA,CAACC,WAA+B,EAAW;IACvD,MAAMC,SAAS,GAAG,IAAI,CAACN,aAAa;IAEpC,IAAI,CAACM,SAAS,EAAE;MACd,OAAO,KAAK;IACd;;IAEA;IACA;IACA;IACA;IACA;IACA,IAAID,WAAW,EAAEE,MAAM,EAAE;MACvB,MAAMC,cAAc,GAClB,IAAIC,IAAI,CAACA,IAAI,CAACC,KAAK,CAACJ,SAAS,CAACK,cAAc,CAAC,CAAC,CAACC,OAAO,EAAE,GACxDC,mBAAY,CAACC,MAAM;MACrB,MAAMC,oBAAoB,GAAGV,WAAW,CAACW,IAAI,CAC1CC,OAAO,IAAKA,OAAO,CAACd,WAAW,KAAKhB,MAAM,CAACmB,SAAS,CAACH,WAAW,CAAC,CACnE;MAED,IAAI,CAACY,oBAAoB,EAAE;QACzB,OAAO,IAAI;MACb;MAEA,OAAOP,cAAc,GAAGO,oBAAoB,CAACrC,KAAK;IACpD;IAEA,OAAO,IAAI;EACb;AACF;AAACwC,OAAA,CAAApB,SAAA,GAAAA,SAAA"}