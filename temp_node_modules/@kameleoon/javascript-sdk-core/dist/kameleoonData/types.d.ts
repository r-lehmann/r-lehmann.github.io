import { Browser, Conversion, CustomData, Device, PageView, UserAgent } from './';
export type KameleoonDataItemType = BrowserDataType | ConversionDataType | CustomDataType | DeviceDataType | PageViewDataType | UserAgentDataType;
/**
 * @interface an interface of KameleoonData
 * each class instance will have url getter method
 * for handling url of different data types
 * */
export interface IKameleoonData {
    readonly url: string;
    readonly data: KameleoonDataItemType;
}
/**
 * @type a tuple of each possible type of data for `addData` method
 * of KameleoonClient
 * */
export type KameleoonDataType = Browser | Conversion | CustomData | Device | PageView | UserAgent;
export declare enum KameleoonData {
    CustomData = "customData",
    PageView = "pageView",
    Browser = "browser",
    Conversion = "conversion",
    Device = "device",
    UserAgent = "userAgent"
}
export type BrowserDataType = {
    browser: BrowserType;
    type: KameleoonData;
    nonce: string;
};
export type ConversionDataType = {
    goalId: number;
    revenue: number;
    negative: boolean;
    type: KameleoonData;
    nonce: string;
};
export type CustomDataType = {
    index: number;
    value: string | string[];
    type: KameleoonData;
    nonce: string;
};
export type DeviceDataType = {
    device: DeviceType;
    type: KameleoonData;
    nonce: string;
};
export type PageViewDataType = {
    urlAddress: string;
    title: string;
    referrers?: number[];
    type: KameleoonData;
    nonce: string;
};
export type UserAgentDataType = {
    value: string;
    type: KameleoonData;
    nonce: string;
};
/**
 * @param {number} goalId - an id of a goal to trac
 * @param {number | undefined} revenue - an optional parameter for revenue, default value is `0`
 * @param {boolean | undefined} negative - an optional parameteridentifying whether the conversion should be removed, default value is `false`
 * */
export type ConversionParametersType = {
    goalId: number;
    revenue?: number;
    negative?: boolean;
};
/**
 * @param {string} urlAddress - url address of the page to track
 * @param {string} title - title of the web page
 * @param {number[] | undefined} referrers - an optional parameter containing a list of refferesIndices, has no default value
 * */
export type PageViewParametersType = {
    urlAddress: string;
    title: string;
    referrers?: number[];
};
/**
 * @readonly
 * @enum {string} an Enum containing all possible variants for device type
 * */
export declare enum DeviceType {
    Phone = "PHONE",
    Tablet = "TABLET",
    Desktop = "DESKTOP"
}
/**
 * @readonly
 * @enum {number} an Enum containing all possible variants for browser type
 * */
export declare enum BrowserType {
    Chrome = 0,
    InternetExplorer = 1,
    Firefox = 2,
    Safari = 3,
    Opera = 4,
    Other = 5
}
