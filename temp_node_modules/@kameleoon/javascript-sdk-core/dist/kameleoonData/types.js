"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KameleoonData = exports.DeviceType = exports.BrowserType = void 0;
/**
 * @interface an interface of KameleoonData
 * each class instance will have url getter method
 * for handling url of different data types
 * */
/**
 * @type a tuple of each possible type of data for `addData` method
 * of KameleoonClient
 * */
let KameleoonData = /*#__PURE__*/function (KameleoonData) {
  KameleoonData["CustomData"] = "customData";
  KameleoonData["PageView"] = "pageView";
  KameleoonData["Browser"] = "browser";
  KameleoonData["Conversion"] = "conversion";
  KameleoonData["Device"] = "device";
  KameleoonData["UserAgent"] = "userAgent";
  return KameleoonData;
}({});
exports.KameleoonData = KameleoonData;
/**
 * @readonly
 * @enum {string} an Enum containing all possible variants for device type
 * */
let DeviceType = /*#__PURE__*/function (DeviceType) {
  DeviceType["Phone"] = "PHONE";
  DeviceType["Tablet"] = "TABLET";
  DeviceType["Desktop"] = "DESKTOP";
  return DeviceType;
}({});
/**
 * @readonly
 * @enum {number} an Enum containing all possible variants for browser type
 * */
exports.DeviceType = DeviceType;
let BrowserType = /*#__PURE__*/function (BrowserType) {
  BrowserType[BrowserType["Chrome"] = 0] = "Chrome";
  BrowserType[BrowserType["InternetExplorer"] = 1] = "InternetExplorer";
  BrowserType[BrowserType["Firefox"] = 2] = "Firefox";
  BrowserType[BrowserType["Safari"] = 3] = "Safari";
  BrowserType[BrowserType["Opera"] = 4] = "Opera";
  BrowserType[BrowserType["Other"] = 5] = "Other";
  return BrowserType;
}({});
exports.BrowserType = BrowserType;
//# sourceMappingURL=types.js.map