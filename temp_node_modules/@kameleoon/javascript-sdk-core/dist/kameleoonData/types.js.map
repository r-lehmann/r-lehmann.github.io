{"version":3,"file":"types.js","names":["KameleoonData","exports","DeviceType","BrowserType"],"sources":["../../src/kameleoonData/types.ts"],"sourcesContent":["import {\n  Browser,\n  Conversion,\n  CustomData,\n  Device,\n  PageView,\n  UserAgent,\n} from './';\n\nexport type KameleoonDataItemType =\n  | BrowserDataType\n  | ConversionDataType\n  | CustomDataType\n  | DeviceDataType\n  | PageViewDataType\n  | UserAgentDataType;\n\n/**\n * @interface an interface of KameleoonData\n * each class instance will have url getter method\n * for handling url of different data types\n * */\nexport interface IKameleoonData {\n  readonly url: string;\n  readonly data: KameleoonDataItemType;\n}\n\n/**\n * @type a tuple of each possible type of data for `addData` method\n * of KameleoonClient\n * */\nexport type KameleoonDataType =\n  | Browser\n  | Conversion\n  | CustomData\n  | Device\n  | PageView\n  | UserAgent;\n\nexport enum KameleoonData {\n  CustomData = 'customData',\n  PageView = 'pageView',\n  Browser = 'browser',\n  Conversion = 'conversion',\n  Device = 'device',\n  UserAgent = 'userAgent',\n}\n\nexport type BrowserDataType = {\n  browser: BrowserType;\n  type: KameleoonData;\n  nonce: string;\n};\n\nexport type ConversionDataType = {\n  goalId: number;\n  revenue: number;\n  negative: boolean;\n  type: KameleoonData;\n  nonce: string;\n};\n\nexport type CustomDataType = {\n  index: number;\n  value: string | string[];\n  type: KameleoonData;\n  nonce: string;\n};\n\nexport type DeviceDataType = {\n  device: DeviceType;\n  type: KameleoonData;\n  nonce: string;\n};\n\nexport type PageViewDataType = {\n  urlAddress: string;\n  title: string;\n  referrers?: number[];\n  type: KameleoonData;\n  nonce: string;\n};\n\nexport type UserAgentDataType = {\n  value: string;\n  type: KameleoonData;\n  nonce: string;\n};\n\n/**\n * @param {number} goalId - an id of a goal to trac\n * @param {number | undefined} revenue - an optional parameter for revenue, default value is `0`\n * @param {boolean | undefined} negative - an optional parameteridentifying whether the conversion should be removed, default value is `false`\n * */\nexport type ConversionParametersType = {\n  goalId: number;\n  revenue?: number;\n  negative?: boolean;\n};\n\n/**\n * @param {string} urlAddress - url address of the page to track\n * @param {string} title - title of the web page\n * @param {number[] | undefined} referrers - an optional parameter containing a list of refferesIndices, has no default value\n * */\nexport type PageViewParametersType = {\n  urlAddress: string;\n  title: string;\n  referrers?: number[];\n};\n\n/**\n * @readonly\n * @enum {string} an Enum containing all possible variants for device type\n * */\nexport enum DeviceType {\n  Phone = 'PHONE',\n  Tablet = 'TABLET',\n  Desktop = 'DESKTOP',\n}\n\n/**\n * @readonly\n * @enum {number} an Enum containing all possible variants for browser type\n * */\nexport enum BrowserType {\n  Chrome,\n  InternetExplorer,\n  Firefox,\n  Safari,\n  Opera,\n  Other,\n}\n"],"mappings":";;;;;;AAiBA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAHA,IAYYA,aAAa,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAAAC,OAAA,CAAAD,aAAA,GAAAA,aAAA;AAwEzB;AACA;AACA;AACA;AAHA,IAIYE,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAMtB;AACA;AACA;AACA;AAHAD,OAAA,CAAAC,UAAA,GAAAA,UAAA;AAAA,IAIYC,WAAW,0BAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAXA,WAAW,CAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAAAF,OAAA,CAAAE,WAAA,GAAAA,WAAA"}