{"version":3,"file":"externalStorage.js","names":["_tsRes","require","_kameleoonError","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","ExternalStorage","constructor","externalStorage","storage","read","result","ok","parse","data","write","JSON","stringify","Ok","err","KameleoonError","KameleoonException","StorageParse","exports"],"sources":["../../src/storage/externalStorage.ts"],"sourcesContent":["import { Ok, Result } from 'ts-res';\nimport { IExternalStorage, IStorage, StorageDataType } from './types';\nimport { KameleoonError, KameleoonException } from '../kameleoonError';\nimport { KameleoonStorageKey } from './constants';\n\nexport class ExternalStorage<T extends StorageDataType> implements IStorage<T> {\n  private key: KameleoonStorageKey;\n  private storage: IExternalStorage;\n\n  constructor(externalStorage: IExternalStorage) {\n    this.key = externalStorage.key;\n    this.storage = externalStorage;\n  }\n\n  public read(): Result<T, KameleoonError> {\n    const result = this.storage.read();\n\n    if (!result.ok) {\n      return result;\n    }\n\n    return this.parse(result.data);\n  }\n\n  public write(data: T): Result<void, KameleoonError> {\n    this.storage.write(JSON.stringify(data));\n\n    return Ok();\n  }\n\n  private parse(data: string): Result<T, KameleoonError> {\n    let result: T;\n\n    try {\n      result = JSON.parse(data);\n    } catch (err) {\n      throw new KameleoonError(KameleoonException.StorageParse, err, this.key);\n    }\n\n    return Ok(result);\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,eAAA,GAAAD,OAAA;AAAuE,SAAAE,gBAAAC,GAAA,EAAAC,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAD,GAAA,IAAAI,MAAA,CAAAC,cAAA,CAAAL,GAAA,EAAAC,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAR,GAAA,CAAAC,GAAA,IAAAC,KAAA,WAAAF,GAAA;AAAA,SAAAG,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAGhE,MAAMU,eAAe,CAAmD;EAI7EC,WAAWA,CAACC,eAAiC,EAAE;IAAAzB,eAAA;IAAAA,eAAA;IAC7C,IAAI,CAACE,GAAG,GAAGuB,eAAe,CAACvB,GAAG;IAC9B,IAAI,CAACwB,OAAO,GAAGD,eAAe;EAChC;EAEOE,IAAIA,CAAA,EAA8B;IACvC,MAAMC,MAAM,GAAG,IAAI,CAACF,OAAO,CAACC,IAAI,EAAE;IAElC,IAAI,CAACC,MAAM,CAACC,EAAE,EAAE;MACd,OAAOD,MAAM;IACf;IAEA,OAAO,IAAI,CAACE,KAAK,CAACF,MAAM,CAACG,IAAI,CAAC;EAChC;EAEOC,KAAKA,CAACD,IAAO,EAAgC;IAClD,IAAI,CAACL,OAAO,CAACM,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;IAExC,OAAO,IAAAI,SAAE,GAAE;EACb;EAEQL,KAAKA,CAACC,IAAY,EAA6B;IACrD,IAAIH,MAAS;IAEb,IAAI;MACFA,MAAM,GAAGK,IAAI,CAACH,KAAK,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZ,MAAM,IAAIC,8BAAc,CAACC,kCAAkB,CAACC,YAAY,EAAEH,GAAG,EAAE,IAAI,CAAClC,GAAG,CAAC;IAC1E;IAEA,OAAO,IAAAiC,SAAE,EAACP,MAAM,CAAC;EACnB;AACF;AAACY,OAAA,CAAAjB,eAAA,GAAAA,eAAA"}