"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KameleoonUtils = void 0;
var _javascriptSdkCore = require("@kameleoon/javascript-sdk-core");
// --- Note ---
// Extra class is created:
// - To enforce abstract `getVisitorCode` method
// - To use extended methods while `KameleoonUtils` itself only operates on static methods
// - To keep similar parameters object on inner implementation and disperse it for proprietary implementations
class KameleoonUtilsConstructor extends _javascriptSdkCore.KameleoonCoreUtils {
  getVisitorCode({
    domain,
    defaultVisitorCode
  }) {
    const cookie = document.cookie;
    const visitorCodeResult = this.getCookieVisitorCode(cookie);
    if (visitorCodeResult.ok && visitorCodeResult.data) {
      return visitorCodeResult.data;
    }
    const visitorCode = defaultVisitorCode || this.generateRandomString(_javascriptSdkCore.VISITOR_CODE_LENGTH);
    const resultCookie = this.getResultCookie({
      domain,
      visitorCode
    });

    // --- Note ---
    // - Browser automatically adds new cookie in the end (without overwrite)
    // - Only one key-value pair can be added at a time
    resultCookie.split(_javascriptSdkCore.Cookie.PairsDelimiter).forEach(item => {
      document.cookie = item;
    });
    return visitorCode;
  }
}

/**
 * @class
 * KameleoonUtils - a class with containing a number of static helper methods
 * */
class KameleoonUtils {
  /**
   * @method getVisitorCode obtains visitor code from the browser cookie, if the visitor code doesn't yet exist generates a random visitor code (or uses a provided default) and sets a new visitor code to cookie
   * @param {string} domain domain which cookie belongs to
   * @param {string | undefined} defaultVisitorCode visitor code to be used in case there is no visitor code in cookies Note: if not passed visitor code will be randomly generated
   * @returns {string} result visitor code
   * */
  static getVisitorCode(domain, defaultVisitorCode) {
    const kameleoonUtilsConstructor = new KameleoonUtilsConstructor();
    return kameleoonUtilsConstructor.getVisitorCode({
      domain,
      defaultVisitorCode
    });
  }
}
exports.KameleoonUtils = KameleoonUtils;
//# sourceMappingURL=kameleoonUtils.js.map